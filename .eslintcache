[{"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\App.js":"2","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\sidebarItem\\sidebarItem.js":"4","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\containers\\Messenger\\Messenger.js":"5","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\Sidebar\\Sidebar.js":"6","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\SidebarItem\\SidebarItem.js":"7","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\Message\\Message.js":"8","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\ChatInputField\\ChatInputField.js":"9","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\Buttons\\ChattingButton\\ChattingButton.js":"10"},{"size":500,"mtime":1606559614101,"results":"11","hashOfConfig":"12"},{"size":249,"mtime":1610202892500,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606559614101,"results":"14","hashOfConfig":"12"},{"size":307,"mtime":1610126305415,"results":"15","hashOfConfig":"12"},{"size":6426,"mtime":1610270560035,"results":"16","hashOfConfig":"12"},{"size":997,"mtime":1610201959572,"results":"17","hashOfConfig":"12"},{"size":592,"mtime":1610131311169,"results":"18","hashOfConfig":"12"},{"size":696,"mtime":1610141282792,"results":"19","hashOfConfig":"12"},{"size":832,"mtime":1610203620892,"results":"20","hashOfConfig":"12"},{"size":376,"mtime":1610202047928,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18kyv50",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\index.js",[],["46","47"],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\App.js",[],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\sidebarItem\\sidebarItem.js",[],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\containers\\Messenger\\Messenger.js",["48","49","50","51"],"import React, { Component } from 'react';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport Message from '../../components/Message/Message';\r\nimport InputField from '../../components/UI/ChatInputField/ChatInputField';\r\nimport classes from './Messenger.module.css';\r\n\r\nexport class Messenger extends Component {\r\n  // data - chatting data that is received from backend\r\n  // by default, when first loads, \r\n  // messenger displays first chat (received from backend data array) in Messaging section  \r\n  // therefore selectedChat by default is 0\r\n  // newMessage - this is text that user types in input field\r\n\r\n  state={\r\n        data: [],\r\n        selectedChat: 0, \r\n        newMessage: null\r\n    }\r\n\r\n    // when component mounts, \r\n    // componnetDidMount sends HTTP request to get \r\n    // chatting data (contact names and chats) from backend, \r\n    // chatting data is then saved as state object\r\n    componentDidMount(){\r\n      let req = new XMLHttpRequest();\r\n\r\n          req.onreadystatechange = () => {\r\n              if (req.readyState == XMLHttpRequest.DONE) {\r\n              if (req.readyState == XMLHttpRequest.DONE) {\r\n                let dataUpdated=[...((JSON.parse(req.responseText))['data'])];\r\n                this.setState({data:dataUpdated});\r\n              }\r\n          }\r\n        };\r\n\r\n        req.open(\"GET\", process.env.REACT_APP_GET_SIDEBAR_CHATS , true);\r\n        req.setRequestHeader(\"secret-key\", \"$2b$10$MC7WsM2nFKf.X0X7Mls4w.0Ijauk9tyXOYV2VYxhtt8ncozO19uGi\");\r\n        req.send();\r\n      \r\n      }\r\n    // when user clicks on a contact name in the Sidebar,\r\n    // selectChat function updates selectedChat property in state\r\n    // therefore, messagingSection array \r\n    // updates and displays chat with selected user\r\n    selectChat=(index)=>{\r\n      console.log('selectChat');\r\n      this.setState({selectedChat: index})\r\n    }\r\n\r\n    // updates newMessage property in state object\r\n    // when user starts typing new message into InputField\r\n    inputChangedHandler = (event) =>{\r\n      event.preventDefault();\r\n      this.setState({newMessage: event.target.value})\r\n\r\n  }\r\n\r\n  // function for creating timestamps that are used as\r\n  // IDs for new nessages\r\n  createTimeStamp=()=>{\r\n    let now = new Date();\r\n    let  timestamp = now.getFullYear().toString(); \r\n         timestamp += ((now.getMonth < 9 ? '0' : '') + now.getMonth().toString()+1); // JS months are 0-based\r\n         timestamp += ((now.getDate() < 10) ? '0' : '') + now.getDate().toString(); \r\n         timestamp += ((now.getHours < 10) ? '0' : '') + now.getHours().toString();\r\n //  let hours = ((now.getHours() < 10) ? '0' : '') + now.getDate().toString();\r\n         timestamp += ((now.getMinutes() < 10) ? '0' : '') + now.getMinutes().toString();\r\n         timestamp += ((now.getSeconds() < 10) ? '0' : '') + now.getSeconds().toString();\r\n\r\n    if(now.getMilliseconds()<10){\r\n      timestamp += '00' + now.getMilliseconds().toString();\r\n    }else if (now.getMilliseconds()<100){\r\n      timestamp += '0' + now.getMilliseconds().toString();\r\n    } else{\r\n      timestamp += now.getMilliseconds().toString();\r\n    }\r\n\r\n    return timestamp\r\n  }\r\n\r\n\r\n  //checks if newMessage is not empty, updates backend and UI\r\n  sendMessage = () => {\r\n    if(this.state.newMessage){\r\n      let timestamp = this.createTimeStamp();\r\n      let newMessageObj = {\r\n        messageText: this.state.newMessage,\r\n        author: 'me',\r\n        date: timestamp\r\n      }\r\n      let newData = [];\r\n    \r\n      //deeply copying and updating state data\r\n      for (let i = 0; i < this.state.data.length; i++) {\r\n        let deepCopy = [];\r\n        let updatedPerson = {};\r\n    \r\n        for (let z = 0; z < Object.values(this.state.data[i])[0].length; z++) {\r\n          deepCopy.push(Object.values(this.state.data[i])[0][z]);\r\n        }\r\n    \r\n        if (i == this.state.selectedChat) {\r\n          deepCopy.push(newMessageObj);\r\n        }\r\n    \r\n        let person = Object.keys(this.state.data[i])[0];\r\n        updatedPerson = {\r\n          [person]: deepCopy\r\n        }\r\n        newData.push(updatedPerson);\r\n      }\r\n    \r\n      let newDataObj = {\r\n        data: newData\r\n      };\r\n      let newDataJson = JSON.stringify(newDataObj);\r\n    \r\n    \r\n      let req = new XMLHttpRequest();\r\n    \r\n      req.onreadystatechange = () => {\r\n        if (req.readyState == XMLHttpRequest.DONE) {\r\n          console.log(req.responseText);\r\n          this.setState({\r\n            data: newData,\r\n            newMessage: ''\r\n          })\r\n        }\r\n      };\r\n    \r\n      req.open(\"PUT\", process.env.REACT_APP_GET_SIDEBAR_CHATS, true);\r\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n      req.setRequestHeader(\"versioning\", \"false\");\r\n      req.setRequestHeader(\"secret-key\", \"$2b$10$MC7WsM2nFKf.X0X7Mls4w.0Ijauk9tyXOYV2VYxhtt8ncozO19uGi\");\r\n      req.send(newDataJson);\r\n    }\r\n    \r\n  \r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.data)\r\n    // in thes isdebar messenger contacts are being displayed\r\n    // sidebar is on the left of the page.\r\n    // messaging section (that contains chat with selected contact) \r\n    // is being displayed on the right side of the page\r\n\r\n   let messagingSection = [] ;\r\n\r\n   if(this.state.data.length>0) { \r\n     let chat = [...Object.values(this.state.data[this.state.selectedChat])[0] ]\r\n     chat.map((chatItem, index)=> messagingSection.push(\r\n                          <Message \r\n                                  author={chatItem.author} \r\n                                  messageText={chatItem.messageText}\r\n                                  key={index}\r\n                                          />))\r\n   }\r\n\r\n\r\n    return (\r\n      <div className={classes.chatComponent}>\r\n              <div className={classes.sidebar}>\r\n                              <Sidebar \r\n                                      data={this.state.data}\r\n                                      selectChat={this.selectChat}/>\r\n              </div>\r\n\r\n              <div className={classes.messagingSection}>\r\n                              {messagingSection}\r\n                              <InputField \r\n                                          inputChangedHandler={this.inputChangedHandler}\r\n                                          sendMessage={this.sendMessage}\r\n                                          />\r\n              </div>\r\n            \r\n\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default Messenger;","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\SidebarItem\\SidebarItem.js",[],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\Message\\Message.js",["52"],"import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nexport const message =(props)=>{\r\n   // this component receives \r\n   // props from Messenger statefull component\r\n   // and displays single user message\r\n\r\n    let me ;\r\n\r\n    props.author=='me' ? me = true : me = false ; \r\n\r\n    return (\r\n                <div className={me ? `${classes.textDiv} ${ classes.myTextDiv}`: `${classes.textDiv} ${ classes.notMyTextDiv}`}>\r\n                <div className={ me ? `${classes.text} ${ classes.myText}`: `${classes.text} ${ classes.notMyText}` }>\r\n                        {props.messageText}\r\n                </div> \r\n                </div>\r\n    )\r\n  }\r\n\r\nexport default message;","C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\ChatInputField\\ChatInputField.js",[],"C:\\Users\\ASUS\\Documents\\React\\2020react05\\Portfolio\\Kilo\\messenger\\src\\components\\UI\\Buttons\\ChattingButton\\ChattingButton.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":28,"column":34,"nodeType":"61","messageId":"62","endLine":28,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":29,"column":34,"nodeType":"61","messageId":"62","endLine":29,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":102,"column":15,"nodeType":"61","messageId":"62","endLine":102,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":122,"column":28,"nodeType":"61","messageId":"62","endLine":122,"endColumn":30},{"ruleId":"59","severity":1,"message":"60","line":11,"column":17,"nodeType":"61","messageId":"62","endLine":11,"endColumn":19},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["65"],["66"],"no-global-assign","no-unsafe-negation"]